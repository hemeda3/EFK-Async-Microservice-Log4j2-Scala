/*
* Build file for user-webservice
*/


apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'
apply plugin: 'docker'
apply plugin: 'idea'
apply plugin: 'findbugs'
apply plugin: "jacoco"

buildscript {
	project.ext {
         springBootVersion = '1.5.3.RELEASE'
         jarName = 'basic-user-webservice'
         versionName = '0.1.1'
         gradleDockerVersion = '1.2'
         lombokVersion='1.16.16'
         disruptorLog4jAsync='3.3.6'
        flywayversion='5.0.7'
        springModelMapper='1.0.0'
         log4jOverslf4j='1.7.13'

    }
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.springBootVersion}"
        classpath "se.transmode.gradle:gradle-docker:${project.gradleDockerVersion}"
    }
}

task createWrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

// Used by the Docker gradle plugin, group refers to the account under which the docker image is created
group = 'ahmed'
mainClassName = 'com.ahmed.UserApplication'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencyManagement {
  imports {
    mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Dalston.RELEASE'
  }
}
configurations {
    all*.exclude module : 'spring-boot-starter-logging'
}
configurations.all {
    exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    exclude group: "ch.qos.logback", module: "logback-classic"
   // exclude group: "log4j", module: "log4j"
}
configurations.all {
    exclude module: 'slf4j-log4j12'
}


dependencies {
     compile "org.slf4j:log4j-over-slf4j:${log4jOverslf4j}"

    compile("org.springframework.boot:spring-boot-starter-web")    {
       exclude module : 'spring-boot-starter-logging'
    }

     compile("org.springframework.boot:spring-boot-starter-data-jpa") {
      exclude module : 'spring-boot-starter-logging'

    }
    compile("com.lmax:disruptor:${disruptorLog4jAsync}")

    compile('org.springframework.boot:spring-boot-starter-log4j2')

    compile("com.h2database:h2")

    compile ('com.github.rozidan:modelmapper-spring-boot-starter:1.0.0')
            {
                exclude module : 'spring-boot-starter-logging'

}
    // flyway for database version conrol
    compile "org.flywaydb:flyway-core:${flywayversion}"


     compileOnly "org.projectlombok:lombok:${lombokVersion}"
     testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")


}


jar {
    baseName = "${project.jarName}"
    version =  "${project.versionName}"
}

/*
* This task builds the docker image by copying the output of the "jar" gradle command
* and moving it to the "build/docker" directory which is used as the staging directory 
* by the docker gradle plugin. We then build the docker image by invoking the appropriate
* Dockerfile.  
*/

docker {
    maintainer = 'Ahmed Mohammed <hemeda2@gmail.com>'
    baseImage = 'frolvlad/alpine-oraclejdk8:slim'
}
task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = jar.baseName
   // tagVersion = "latest"
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        // Copy the built fat jar to the Docker plugin staging directory
        copy {
            from jar
            into stageDir
        }
        // Copy the run.sh file to the Docker plugin staging directory
        copy {
            from 'src/main/docker/filebeat.yml'
            from 'src/main/docker/start.sh'
            into stageDir
        }
    }

}
task gatlingRunStatflo(dependsOn: ':loadtest:loadTest')  {

}


jacoco {
    toolVersion = "0.8.1"
}


test {
    jacoco {
        append = false
        destinationFile  file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir   file("$buildDir/jacoco/classpathdumps")
    }
}
jacocoTestReport {
    reports {
        xml.enabled false
        html.enabled true
        csv.enabled false
    }
}





run {
    jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=4200,suspend=n','-Dspring.profiles.active=default']
}